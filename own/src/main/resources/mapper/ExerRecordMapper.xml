<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.prjt.own.exercise.mapper.ExerRecordMapper">
	<!-- 자주쓰는 쿼리 -->
	<sql id="latestRecord">
		SELECT *
          FROM EXER_RECORD
		 WHERE TRUNC(EXEREC_DATE) = TRUNC((	SELECT MAX(EXEREC_DATE)
											  FROM EXER_RECORD
											 WHERE USER_ID = #{userId}))
															 
		ORDER BY EXEREC_DATE DESC
	</sql>
	
	<!-- 등록 -->
	<insert id="insertExerRecord" parameterType="ExerRecordVO">
		<selectKey keyProperty="eno" resultType="string"
			order="BEFORE">
			SELECT EXER_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO 
		EXER_RECORD (USER_ID, 
		             EXEREC_DATE, 
		             EXEREC_WEIGHT,
					 EXEREC_CONDITION, 
					 EXEREC_TIME, 
					 EXEREC_METER, 
					 EXEREC_ROUTIN,
					 EXEREC_FEEDBACK, 
					 EXEREC_NO, 
					 EXERSUB_NO 
					 )
		VALUES (#{userId},
				CURRENT_DATE,
				#{exerecWeight}, 
				#{exerecCondition}, 
				#{exerecTime},
				#{exerecMeter},
				#{exerecRoutin}, 
				#{exerecFeedback},
				'EXR_'||#{eno},
				#{exersubNo})
	</insert>

	<!-- 회원의 운동기록 중 가장 최신날짜의 데이터 조회 
		 기록날짜, 기록식별번호, 운동식별번호, 운동명, 컨디션, 운동시간, 칼로리계산, 거리 출력 -->
	<select id="LatestExerRecord" resultType="ExerRecordVO"
		parameterType="string">
		SELECT	R.EXEREC_DATE EXEREC_DATE, 
				R.EXEREC_NO EXEREC_NO, 
				R.EXERSUB_NO EXERSUB_NO, 
				S.EXERSUB_NAME EXERSUB_NAME, 
				R.EXEREC_CONDITION EXEREC_CONDITION, 
				R.EXEREC_TIME EXEREC_TIME,
				R.EXEREC_METER EXEREC_METER,
				ROUND(SUM(R.EXEREC_TIME*S.KCAL)) KCALS
		FROM ( 
			<include refid="latestRecord"/>
			) R
		JOIN EXER_SUB S
		  ON R.EXERSUB_NO = S.EXERSUB_NO
		
		WHERE R.USER_ID = #{userId}
		GROUP BY R.EXEREC_TIME, R.EXEREC_DATE, R.EXEREC_NO, R.EXERSUB_NO, S.EXERSUB_NAME, R.EXEREC_CONDITION, S.KCAL, R.EXEREC_METER 
	</select>
	
	<!-- 가장 최신날짜의 데이터의 운동종목, 횟수 조회 -->
	<select id="dayRecordCounting" resultType="ExerRecordVO" parameterType="string">
		SELECT   EXERSUB_NAME, COUNT(*) E_COUNT
		FROM EXER_RECORD R
        JOIN EXER_SUB S	ON R.EXERSUB_NO = S.EXERSUB_NO 
        WHERE TO_DATE(EXEREC_DATE, 'YYYY-MM-DD') = TO_DATE((SELECT MAX(EXEREC_DATE)
															FROM EXER_RECORD), 'YYYY-MM-DD') 
		AND R.USER_ID = #{userId}
		GROUP BY EXERSUB_NAME
	</select>
	
	<!-- 유저의 데이터 중 최근 7일 날짜와 몸무게 출력 -->
	<select id="getWeight" resultType="ExerRecordVO" parameterType="string">
		SELECT *
		FROM (
			SELECT DISTINCT TO_DATE(EXEREC_DATE, 'YYYY-MM-DD') EXEREC_DATE, EXEREC_WEIGHT
			FROM EXER_RECORD
			WHERE USER_ID = #{userId}
			ORDER BY 1 DESC
		)
		WHERE ROWNUM BETWEEN 1 AND 7 
		ORDER BY 1
	</select>
	
	<!-- 날짜범위 선택해서 운동데이터 출력 -->
	<select id="selectRecord" resultType="ExerRecordVO" parameterType="string">
		SELECT	R.EXEREC_DATE EXEREC_DATE, 
				R.EXEREC_NO EXEREC_NO, 
				R.EXERSUB_NO EXERSUB_NO, 
				S.EXERSUB_NAME EXERSUB_NAME, 
				R.EXEREC_CONDITION EXEREC_CONDITION, 
				R.EXEREC_TIME EXEREC_TIME,
				R.EXEREC_METER EXEREC_METER,
				ROUND(SUM(R.EXEREC_TIME*S.KCAL)) KCALS
		FROM ( 
			SELECT *
            FROM EXER_RECORD
			WHERE EXEREC_DATE BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD') 
              AND TO_DATE(#{endDate}, 'YYYY-MM-DD') + 0.99999
			) R
		JOIN EXER_SUB S
		ON R.EXERSUB_NO = S.EXERSUB_NO
		
		WHERE R.USER_ID = #{userId}
		GROUP BY R.EXEREC_TIME, R.EXEREC_DATE, R.EXEREC_NO, R.EXERSUB_NO, S.EXERSUB_NAME, R.EXEREC_CONDITION, S.KCAL, R.EXEREC_WEIGHT, R.EXEREC_METER     
        ORDER BY EXEREC_DATE DESC
	</select>
	
	<!-- 날짜범위 선택해서 몸무게 출력 -->
	<select id="selectWeight" resultType="ExerRecordVO" parameterType="string">
		SELECT DISTINCT TO_DATE(EXEREC_DATE, 'YYYY-MM-DD') EXEREC_DATE, EXEREC_WEIGHT
		FROM EXER_RECORD
		WHERE USER_ID = #{userId}
		AND EXEREC_DATE BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD') 
	                          AND TO_DATE(#{endDate}, 'YYYY-MM-DD')+ 0.99999
		ORDER BY 1
	</select>
	
	<!-- 날짜범위 선택해서 운동종목, 횟수 조회 -->
	<select id="selectCounting" resultType="ExerRecordVO" >
		SELECT   EXERSUB_NAME, COUNT(*) E_COUNT
		FROM EXER_RECORD R
        JOIN EXER_SUB S	ON R.EXERSUB_NO = S.EXERSUB_NO 
        WHERE EXEREC_DATE BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD') 
                            AND TO_DATE(#{endDate}, 'YYYY-MM-DD')+ 0.99999
		AND R.USER_ID = #{userId}
		GROUP BY EXERSUB_NAME
	</select>
	
</mapper>
