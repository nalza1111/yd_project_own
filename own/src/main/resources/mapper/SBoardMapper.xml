<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.prjt.own.sns.mapper.SBoardMapper">

	<!-- 내 게시글 전체 조회 -->
	<select id="getSnsBoardList" resultType="SBoardVO">
		SELECT TO_NUMBER(SUBSTR(sns_board_no,5)) as SNS_BOARD_NO,
		       SNS_BOARD_CONTENT,
		       SNS_BOARD_DATE,
		       SNS_NICKNAME,
		       SNS_ACCOUNT_NO
		FROM SNS_BOARD
		WHERE SNS_NICKNAME =
						(SELECT S.SNS_NICKNAME 
							FROM SNS_ACCOUNT S, OWN_USERS O
							WHERE S.SNS_ACCOUNT_NO=O.SNS_ACCOUNT_NO
							AND S.SNS_NICKNAME= #{snsNickname})
		ORDER BY SNS_BOARD_NO DESC
	</select>
	
	<!-- 게시글 갯수 카운트 -->
	<select id="countBoard" resultType="int">
		SELECT COUNT(*)
			FROM SNS_BOARD
			WHERE SNS_NICKNAME= #{snsNickname}
	</select>
	
	<!-- 게시글 한건 조회 -->
	<select id="getSnsBoard" resultType="SBoardVO">
		SELECT * FROM SNS_BOARD WHERE SNS_BOARD_NO = #{snsBoardNo}
	</select>
	
	<select id="getSnsBoardNo" resultType="SBoardVO">
		SELECT SNS_BOARD_NO
		FROM SNS_BOARD
		WHERE SNS_NICKNAME = #{snsNickname}
		ORDER BY SNS_BOARD_NO DESC
	</select>
	
	<!-- 팔로우 기반 최신 게시글 조회 -->
	<select id="getNowBoardList" resultType="SBoardVO">
		select A.sns_nickname, A.sns_board_content, A.sns_board_date, A.sns_board_no, a.sns_account_no, 
				(select media_server_file from multimedia where identify_id = 
				(select sns_account_no from sns_account where sns_account_no= a.sns_account_no)) as media_server_file, 
                (select count(*) from own_like where category_no = a.sns_board_no) as like_count,
                (select count(*) from reply where category_no = a.sns_board_no) as reply_count
		      FROM (SELECT 
		               SNS_NICKNAME, SNS_BOARD_CONTENT, SNS_BOARD_DATE, SNS_BOARD_NO, SNS_ACCOUNT_NO, 
		                  ROW_NUMBER() OVER(PARTITION BY sns_nickname ORDER BY to_number(SUBSTR(sns_board_no,5)) DESC) AS rn FROM sns_board) A,
		                  (SELECT SNS_FOLLOW_ID FROM SNS_FOLLOW WHERE SNS_FOLLOWER_ID = #{snsFollowerId}) B
		      WHERE A.SNS_ACCOUNT_NO = B.SNS_Follow_id
		AND rn = 1
	</select>
	
	<!-- 최신게시글 랜덤뽑기 -->
	<select id="getNewBoardList" resultType="SBoardVO">
	
	select A.sns_nickname, A.sns_board_content, A.sns_board_date, A.sns_board_no, a.sns_account_no,
            (select media_server_file
                    from
                    (select media_no, media_server_file, identify_id,
                            ROW_NUMBER() OVER(PARTITION BY identify_id order by media_no desc) as rn
                   	from multimedia)
                    where rn=1 and identify_id = a.sns_board_no) as media_server_file
		FROM (SELECT 
		      SNS_NICKNAME, SNS_BOARD_CONTENT, SNS_BOARD_DATE, SNS_BOARD_NO, SNS_ACCOUNT_NO, 
		      ROW_NUMBER() OVER(PARTITION BY sns_nickname ORDER BY to_number(SUBSTR(sns_board_no,5)) DESC) AS rn FROM sns_board
		      order by DBMS_RANDOM.RANDOM) A
		      where rn = 1
	</select>
	<!-- 내가 좋아요한 게시물 -->
	<select id="snsBoardLikeList" resultType="SBoardVO">
		select s.sns_board_no, s.sns_board_content, s.sns_board_date, s.sns_nickname, to_number(SUBSTR(l.like_no,5))
			from sns_board s, own_like l
			where l.user_id = #{userId}
			and s.sns_board_no = l.category_no
            order by like_no desc
	</select>
	<!-- 게시글 입력 -->
	<insert id="insertSnsBoard" parameterType="SBoardVO">
		<selectKey keyProperty="snsBoardNo" resultType="string" order="BEFORE">
			SELECT sns_board_no.NEXTVAL FROM DUAL
		</selectKey>
		
			INSERT INTO sns_board (sns_board_no, sns_board_content, sns_board_date, sns_nickname, sns_account_no)
			VALUES ('SBN_'||#{snsBoardNo}, #{snsBoardContent}, current_date, 
			       (SELECT sns_nickname
			            FROM sns_account s, own_users o
			            WHERE o.sns_account_no = #{snsAccountNo}
			            AND s.sns_account_no = o.sns_account_no),
			       (select s.sns_account_no
			            FROM sns_account s, own_users o
			            where s.sns_account_no = o.sns_account_no
			            and o.sns_account_no = #{snsAccountNo}))
	</insert>
	
	<!-- 게시글 수정 -->
	<update id="updateSnsBoard" parameterType="SBoardVO">
		UPDATE SNS_BOARD
		SET SNS_BOARD_CONTENT = #{snsBoardContent},
			    SNS_BOARD_DATE = current_date
		WHERE SNS_BOARD_NO = ${snsBoardNo}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="deleteSnsBoard">
		DELETE FROM SNS_BOARD
		WHERE SNS_BOARD_NO = #{snsBoardNo} 
	</delete>
	
	<!-- 게시글 한건에 대한 댓글 전체 조회-->
	<select id="getBoardReplyList" resultType="ReplyVO">
		select TO_NUMBER(SUBSTR(R.REPLY_NO, 5)) AS REPLY_NO,
			       R.REPLY_CONTENT,
			       R.REPLY_DATE,
			       S.SNS_NICKNAME AS userId
			FROM SNS_ACCOUNT S, OWN_USERS O, REPLY R
			WHERE R.USER_ID = O.USER_ID
			AND O.SNS_ACCOUNT_NO = S.SNS_ACCOUNT_NO
			AND R.CATEGORY_NO = #{snsBoardNo}
			ORDER BY REPLY_NO DESC
	</select>
	
	<!-- 댓글 입력 -->
	<insert id="insertSnsReply" parameterType="ReplyVO">
	<selectKey keyProperty="replyNo" resultType="string" order="BEFORE">
			SELECT reply_seq.NEXTVAL FROM DUAL
		</selectKey>
		insert into reply(reply_no, reply_content, reply_date, user_id, category_no)
		values ('SRE_'||#{replyNo}, #{replyContent}, current_date, #{userId}, #{categoryNo})
	</insert>
	
	<!-- 댓글 수 조회 -->
	<select id="snsReplyCount" resultType="int">
		select count(*) from reply
			where category_no = #{snsBoardNo}
	</select>
	<!-- 댓글 수정 -->
	<!-- 댓글 삭제 -->
	<delete id="deleteSnsReply">
		delete from reply
		where reply_no = #{replyNo}
	</delete>
	
	
	
</mapper>