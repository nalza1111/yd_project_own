<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="co.prjt.own.band.mapper.BandBoardDetailMapper">
	
	<sql id="condition">
		<if test="bandBoardOptionNo != null and bandBoardOptionNo !='' and bandBoardOptionNo !='undefined'">
			AND   A.BAND_BOARD_OPTION_NO = #{bandBoardOptionNo}
		</if>
		<!-- 제목+내용 -->
		<if test="searchKeyword == 's1'">
			AND	(BAND_BOARD_TITLE LIKE '%${searchValue}%'
        	OR   BAND_BOARD_CONTENT LIKE '%${searchValue}%')
		</if>
		<!-- 제목 -->
		<if test="searchKeyword == 's2'">
			AND	BAND_BOARD_TITLE LIKE '%${searchValue}%' 
		</if>
		<!-- 내용 -->
		<if test="searchKeyword == 's3'">
			AND	BAND_BOARD_CONTENT LIKE '%${searchValue}%'
		</if>
		<!-- 글쓴이 -->
		<if test="searchKeyword == 's4'">
			AND	BAND_BOARD_WRITER LIKE '%${searchValue}%'
		</if>
	</sql>
	<!-- 메인화면서에가는 검색어 -->
	<sql id="searchCondition">
		<if test="searchValue != null and searchValue !=''">
			AND (BAND_BOARD_WRITER LIKE '%${searchValue}%'
	        OR   BAND_BOARD_TITLE LIKE '%${searchValue}%'
	        OR   BAND_BOARD_CONTENT LIKE '%${searchValue}%')
		</if>
	</sql>
	<select id="countBandBoard" resultType="int">
		SELECT COUNT(*)
		    FROM BAND_BOARD_DETAIL A, BAND B, BAND_BOARD_OPTION C
		    WHERE B.BAND_NO=C.BAND_NO
		      AND C.BAND_BOARD_OPTION_NO=A.BAND_BOARD_OPTION_NO
		      AND C.BAND_NO = #{bandNo}
	</select>
	
	<select id="getFiveBoard" resultType="BandBoardDetailSearchVO">
		SELECT 
           		A.BAND_BOARD_DETAIL_NO 	"bandBoardDetailNo",
                A.BAND_BOARD_OPTION_NO 	"bandBoardOptionNo",
                A.BAND_BOARD_CONTENT 	"bandBoardContent",
                A.BAND_BOARD_CNT 		"bandBoardCnt",
                A.BAND_BOARD_TITLE 		"bandBoardTitle",
                A.BAND_BOARD_WRITER 	"bandBoardWriter", 
                A.BAND_REMARKS 			"bandRemarks",
                A.BAND_BOARD_DATE 		"bandBoardDate",
                A.BAND_BOARD_UPDATE 	"bandBoardUpdate",
                A.BAND_BOARD_TAG 		"bandBoardTag",
                B.REPLY      			"reply"
			      FROM BAND_BOARD_DETAIL A,
			          (SELECT  BAND_BOARD_DETAIL_NO, COUNT(REPLY_NO) "REPLY"
				        		FROM (
				    					SELECT * FROM
													    (SELECT A.BAND_BOARD_DETAIL_NO,
													            A.BAND_BOARD_OPTION_NO,
													            A.BAND_BOARD_CNT,
													            A.BAND_BOARD_WRITER, 
													            A.BAND_REMARKS,
													            A.BAND_BOARD_DATE,
													            A.BAND_BOARD_UPDATE,
													            A.BAND_BOARD_TAG
													        FROM BAND_BOARD_DETAIL A,
													             BAND_BOARD_OPTION B,
													             BAND C
													        WHERE   A.BAND_BOARD_OPTION_NO = B.BAND_BOARD_OPTION_NO
													        AND     B.BAND_NO = C.BAND_NO
													        AND     C.BAND_NO = #{bandNo}
															<if test="bandBoardDetailNo != null and bandBoardDetailNo !=''">
        													AND     TO_NUMBER(SUBSTR(A.BAND_BOARD_DETAIL_NO, 5,5)
        													)<![CDATA[ < ]]>TO_NUMBER(SUBSTR(#{bandBoardDetailNo}, 5,5)
        								)
        													</if>
        			ORDER BY to_number(SUBSTR(A.BAND_BOARD_DETAIL_NO, 5,5)) DESC
        				)
        WHERE rownum BETWEEN 1 AND 5   )A, REPLY B
                        WHERE A.BAND_BOARD_DETAIL_NO = B.CATEGORY_NO(+)
                        GROUP BY  BAND_BOARD_DETAIL_NO) B
                        WHERE A.BAND_BOARD_DETAIL_NO=B.BAND_BOARD_DETAIL_NO
                        ORDER BY to_number(SUBSTR(A.BAND_BOARD_DETAIL_NO, 5,5)) DESC     
	</select>
	<select id="getOwnLike" resultType="OwnLikeVO">
		SELECT 	A.CATEGORY_NO,
		        A.USER_ID,
		        A.CATEGORY,
		        A.LIKE_NO,
		        B.LIKECOUNT
		FROM(
		SELECT  CATEGORY_NO,
		        USER_ID,
		        CATEGORY,
		        LIKE_NO
		        FROM OWN_LIKE
		        WHERE CATEGORY_NO IN 
	                                <foreach collection="categoryNos" item="c" separator="," open="(" close=")">
	                                	#{c}
	                                </foreach>
			                                AND USER_ID=#{userId}) A,
		(SELECT  CATEGORY_NO, COUNT(CATEGORY_NO) "LIKECOUNT"
		        FROM OWN_LIKE
		        WHERE CATEGORY_NO IN 
	                                <foreach collection="categoryNos" item="c" separator="," open="(" close=")">
	                                	#{c}
	                                </foreach>
		        GROUP BY CATEGORY_NO) B
		        WHERE A.CATEGORY_NO=B.CATEGORY_NO
	</select>
	
	<select id="getBandBoard" resultType="BandBoardDetailSearchVO">
			SELECT      BAND_BOARD_DETAIL_NO 	"bandBoardDetailNo",
			            BAND_BOARD_OPTION_NO 	"bandBoardOptionNo",
			            BAND_BOARD_CONTENT 		"bandBoardContent",
			            BAND_BOARD_CNT 			"bandBoardCnt",
			            BAND_BOARD_TITLE 		"bandBoardTitle",
			            BAND_BOARD_WRITER 		"bandBoardWriter", 
			            BAND_REMARKS 			"bandRemarks",
			            BAND_BOARD_DATE 		"bandBoardDate",
			            BAND_BOARD_UPDATE 		"bandBoardUpdate",
			            BAND_BOARD_TAG 			"bandBoardTag",
			            REPLY      				"reply",
			            Band_Nickname			"BandNickname",
                        band_board_name       "bandBoardNames"
		 		FROM ( 
		 				SELECT ROWNUM RN, A.*
		 					FROM (
									SELECT *
										FROM (	SELECT 	B.BAND_BOARD_DETAIL_NO,
                                                        B.BAND_BOARD_OPTION_NO,
                                                        B.BAND_BOARD_CONTENT,
                                                        B.BAND_BOARD_CNT,
                                                        B.BAND_BOARD_TITLE,
                                                        B.BAND_BOARD_WRITER,
                                                        B.BAND_REMARKS,
                                                        B.BAND_BOARD_DATE,
                                                        B.BAND_BOARD_UPDATE,
                                                        B.BAND_BOARD_TAG,
                                                        B.band_nickname,
                                                        B.REPLY,
                                                        A.BAND_BOARD_NAME FROM
													 (	SELECT * FROM  (SELECT 	A.BAND_BOARD_DETAIL_NO,
																	            A.BAND_BOARD_OPTION_NO,
																	            A.BAND_BOARD_CONTENT,
																	            A.BAND_BOARD_CNT,
																	            A.BAND_BOARD_TITLE,
																	            A.BAND_BOARD_WRITER,
																	            A.BAND_REMARKS,
																	            A.BAND_BOARD_DATE,
																	            A.BAND_BOARD_UPDATE,
																	            A.BAND_BOARD_TAG,
																	            B.REPLY
								     											 FROM 
								     											 	  BAND_BOARD_DETAIL A,
								     											 	  (SELECT  BAND_BOARD_DETAIL_NO,
								       												   		   COUNT(REPLY_NO) "REPLY"
									        												FROM (	SELECT 	A.BAND_BOARD_DETAIL_NO,
																								            A.BAND_BOARD_OPTION_NO,
																								            A.BAND_BOARD_CNT,
																								            A.BAND_BOARD_WRITER, 
																								            A.BAND_REMARKS,
																								            A.BAND_BOARD_DATE,
																								            A.BAND_BOARD_UPDATE,
																								            A.BAND_BOARD_TAG
																								        FROM BAND_BOARD_DETAIL A,
																								             BAND_BOARD_OPTION B,
																								             BAND C
																								        WHERE   A.BAND_BOARD_OPTION_NO = B.BAND_BOARD_OPTION_NO
																								        AND     B.BAND_NO = C.BAND_NO
																								        AND     C.BAND_NO = #{bandNo}
							
									  																)A,
			  																							REPLY B
										       												 WHERE A.BAND_BOARD_DETAIL_NO = B.CATEGORY_NO(+)
									        												 GROUP BY  BAND_BOARD_DETAIL_NO) B

												        							WHERE A.BAND_BOARD_DETAIL_NO = B.BAND_BOARD_DETAIL_NO
														        					ORDER BY TO_NUMBER(SUBSTR(A.BAND_BOARD_DETAIL_NO, 5,5)) DESC
																		) A,
																		BAND_MEMBER_DETAIL B
													WHERE A.BAND_BOARD_WRITER=B.USER_ID
													AND   BAND_NO = #{bandNo}
													<if test="bandBoardOptionNo != null and bandBoardOptionNo !=''and bandBoardOptionNo !='undefined'">
													AND   BAND_BOARD_OPTION_NO = #{bandBoardOptionNo}
													</if>
													  )B, BAND_BOARD_OPTION A        WHERE A.BAND_BOARD_OPTION_NO = B.BAND_BOARD_OPTION_NO
													  <!-- 검색어 -->
													  <include refid="searchCondition" />
													<!-- 검색조건 -->  
													  <include refid="condition" />
												 )       
 <![CDATA[
 		) A WHERE ROWNUM <= #{last} ) WHERE RN >= #{first}
 ]]>
	</select>
	<select id="getBandBoardCount" resultType="int">
		SELECT  count(*)
        FROM BAND_BOARD_DETAIL A,
             BAND_BOARD_OPTION B,
             BAND C
        WHERE   A.BAND_BOARD_OPTION_NO = B.BAND_BOARD_OPTION_NO
        AND     B.BAND_NO = C.BAND_NO
        AND     C.BAND_NO = #{bandNo}
		<!-- 검색조건 -->
	    <include refid="searchCondition" />
        <include refid="condition" />
	</select>
	
	<select id="getBandBoardDetail" resultType="BandBoardDetailSearchVO">
		SELECT BAND_BOARD_DETAIL_NO "bandBoardDetailNo",
	            BAND_BOARD_OPTION_NO "bandBoardOptionNo",
	            BAND_BOARD_CONTENT "bandBoardContent",
	            BAND_BOARD_CNT "bandBoardCnt",
	            BAND_BOARD_TITLE "bandBoardTitle",
	            BAND_BOARD_WRITER "bandBoardWriter", 
	            BAND_REMARKS "bandRemarks",
	            BAND_BOARD_DATE "bandBoardDate",
	            BAND_BOARD_UPDATE "bandBoardUpdate",
	            BAND_BOARD_TAG "bandBoardTag",
	            BAND_NICKNAME "bandNickname",
	            BAND_NO "bandNo"
	    FROM  (SELECT 
	    		BAND_BOARD_DETAIL_NO,
	            A.BAND_BOARD_OPTION_NO,
	            BAND_BOARD_CONTENT,
	            BAND_BOARD_CNT,
	            BAND_BOARD_TITLE,
	            BAND_BOARD_WRITER,
	            BAND_REMARKS,
	            BAND_BOARD_DATE,
	            BAND_BOARD_UPDATE,
	            BAND_BOARD_TAG,
	            BAND_NICKNAME,
	            C.BAND_NO 
	            FROM BAND_BOARD_DETAIL A, BAND_MEMBER_DETAIL B, band_board_option C
	            WHERE A.BAND_BOARD_WRITER = B.USER_ID
                     AND C.BAND_NO = B.BAND_NO
                     AND C.BAND_BOARD_OPTION_NO = A.BAND_BOARD_OPTION_NO
	                 AND A.BAND_BOARD_DETAIL_NO = #{bandBoardDetailNo}
	        )WHERE ROWNUM=1
	</select>
	<select id="getOwnDetailLike" resultType="OwnLikeVO">
		SELECT * FROM OWN_LIKE WHERE CATEGORY_NO = #{bandBoardDetailNo}
	</select>
	
	<insert id="insertBandBoard">
		<!-- <selectKey keyProperty="bandBoardDetailNo" resultType="string" order="BEFORE">
			SELECT MAX(TO_NUMBER(SUBSTR(BAND_BOARD_DETAIL_NO,5)))+1 FROM BAND_BOARD_DETAIL
		</selectKey> -->
		<selectKey keyProperty="bandBoardDetailNo" resultType="string" order="BEFORE">
			SELECT BAND_BOARD_DETAIL_SEQ.NEXTVAL-1 FROM DUAL
		</selectKey>
		INSERT INTO BAND_BOARD_DETAIL(
                    BAND_BOARD_CONTENT,
                    BAND_BOARD_CNT,
                    BAND_BOARD_DETAIL_NO,
                    BAND_REMARKS,
                    BAND_BOARD_DATE,
                    BAND_BOARD_UPDATE,
                    BAND_BOARD_TAG,
                    BAND_BOARD_OPTION_NO,
                    BAND_BOARD_TITLE,
                    BAND_BOARD_WRITER)
            values(
                    #{bandBoardContent},
                    1,
                    'BDD_'||#{bandBoardDetailNo},
                    #{bandRemarks},
                    CURRENT_DATE,
                    NULL,
                    #{bandBoardTag},
                    #{bandBoardOptionNo},	
                    #{bandBoardTitle},
                    #{bandBoardWriter}
                    )
	</insert>
	<update id="updateBandBoard">
		UPDATE BAND_BOARD_DETAIL SET
                    BAND_BOARD_CONTENT = #{bandBoardContent},
                    BAND_REMARKS = #{bandRemarks},
                    BAND_BOARD_TAG = #{bandBoardTag},
                    BAND_BOARD_OPTION_NO = #{bandBoardOptionNo},
                    BAND_BOARD_TITLE = #{bandBoardTitle}
           WHERE BAND_BOARD_DETAIL_NO = #{bandBoardDetailNo}
	</update>
	<insert id="insertCalendar">
		<selectKey keyProperty="bandCalendarNo" resultType="string" order="BEFORE">
			SELECT CALENDAR_SEQ.NEXTVAL-1 FROM DUAL
		</selectKey>
		INSERT INTO BAND_CALENDAR(
								BAND_CALENDAR_NO,
								BAND_BOARD_DETAIL_NO,
								BAND_CALENDAR_START,
								BAND_CALENDAR_END,
								BAND_CALENDAR_TITLE,
								BAND_CALENDAR_MARK,
								BAND_CALENDAR_LOCATION, 
								BAND_CALENDAR_OPTION,
								BAND_CALENDAR_OPTION_DAY,
								BAND_CALENDAR_LOCATION_LATLONG,
								BAND_NO,
								USER_ID
							) VALUES (
								#{bandCalendarNo},
								#{bandBoardDetailNo},
								#{bandCalendarStart},
								#{bandCalendarEnd},
								#{bandCalendarTitle},
								#{bandCalendarMark},
								#{bandCalendarLocation},
								#{bandCalendarOption},
								#{bandCalendarOptionDay},
								#{bandCalendarLocationLatlong},
								#{bandNo},
								#{userId}
							)
			
	</insert>
	<select id="selectCalendar" resultType="co.prjt.own.band.service.BandCalendarVO">
		SELECT	BAND_CALENDAR_NO,
				BAND_BOARD_DETAIL_NO,
				BAND_CALENDAR_START,
				BAND_CALENDAR_END,
				BAND_CALENDAR_TITLE,
				BAND_CALENDAR_MARK,
				BAND_CALENDAR_LOCATION, 
				BAND_CALENDAR_OPTION,
				BAND_CALENDAR_OPTION_DAY,
				BAND_CALENDAR_LOCATION_LATLONG,
				BAND_NO
		FROM BAND_CALENDAR 
		WHERE BAND_BOARD_DETAIL_NO = #{bandBoardDetailNo} OR BAND_CALENDAR_NO = #{bandBoardDetailNo}
		<!-- 캘린더번호로도 조회하게.. -->
	</select>
	<select id="selectCalendars" resultType="co.prjt.own.band.service.BandCalendarVO">
		SELECT	BAND_CALENDAR_NO,
				BAND_BOARD_DETAIL_NO,
				BAND_CALENDAR_START,
				BAND_CALENDAR_END,
				BAND_CALENDAR_TITLE,
				BAND_CALENDAR_MARK,
				BAND_CALENDAR_LOCATION, 
				BAND_CALENDAR_OPTION,
				BAND_CALENDAR_OPTION_DAY,
				BAND_CALENDAR_LOCATION_LATLONG,
				BAND_NO
		FROM BAND_CALENDAR
		WHERE BAND_BOARD_DETAIL_NO  IN 
                    <foreach collection="bandBoardDetailNo" item="b" separator="," open="(" close=")">
                    	#{b}
                    </foreach>
	</select>
	
	<select id="selectCalendarDetail" resultType="BandCalendarDetailVO">
		SELECT 	BAND_CALENDAR_NO "bandCalendarNo",
        		BAND_MEMBER_NO "bandUserId",
        		BAND_ATTEND "bandAttend",
        		BAND_NICKNAME "bandMemberNo"
			FROM BAND_CALENDAR_DETAIL A, (SELECT B.BAND_NICKNAME, B.USER_ID FROM BAND A, BAND_MEMBER_DETAIL B
            WHERE A.BAND_NO = B.BAND_NO
            AND   B.BAND_NO = (
                SELECT Z.BAND_NO FROM            
                BAND Z, BAND_CALENDAR Y, BAND_BOARD_DETAIL X, BAND_BOARD_OPTION W
                WHERE Z.BAND_NO             =   W.BAND_NO
                AND   W.BAND_BOARD_OPTION_NO=   X.BAND_BOARD_OPTION_NO
                AND   X.BAND_BOARD_DETAIL_NO=   Y.BAND_BOARD_DETAIL_NO
                AND   Y.BAND_CALENDAR_NO    =   #{BANDCALENDARNO}
            )) B
            WHERE   B.USER_ID = A.BAND_MEMBER_NO
            AND     BAND_CALENDAR_NO    =   #{bandCalendarNo}
	</select>
	<delete id="deleteCalendarDetail">
		DELETE FROM BAND_CALENDAR_DETAIL
				where BAND_CALENDAR_NO = #{bandCalendarNo},
				 and  BAND_MEMBER_NO = #{bandMemberNo},
	</delete>
	<select id="inupProCalendarDetail" statementType="CALLABLE" parameterType="map" resultType="integer">
		{ call insert_update_cal(
				#{bandMemberNo, mode=IN, jdbcType=VARCHAR},
			    #{bandCalendarNo, mode=IN, jdbcType=VARCHAR},
                #{bandAttend, mode=IN, jdbcType=VARCHAR},
	            #{pNum, mode=OUT, jdbcType=INTEGER}
                    )
                }
	</select>
	
	<!-- 7일/14일/30일 밴드캘린더 검색 밴드메인용 -->
	<select id="selectCalendarNum" resultType="BandCalendarVO">
		SELECT	BAND_CALENDAR_NO,
		        BAND_BOARD_DETAIL_NO,
		        BAND_CALENDAR_START,
		        BAND_CALENDAR_END,
		        BAND_CALENDAR_TITLE,
		        BAND_CALENDAR_MARK,
		        BAND_CALENDAR_LOCATION, 
		        BAND_CALENDAR_OPTION,
		        BAND_CALENDAR_OPTION_DAY,
		        BAND_CALENDAR_LOCATION_LATLONG,
		        BAND_NO
				FROM BAND_CALENDAR
				WHERE(( BAND_CALENDAR_START BETWEEN CURRENT_DATE AND CURRENT_DATE + #{day})
		          OR (BAND_CALENDAR_END  BETWEEN CURRENT_DATE AND CURRENT_DATE + #{day}))
          		AND BAND_NO = #{bandNo}
	</select>
	
	<!-- 30일 밴드캘린더 창 용 ....그냥 다 넘기자 -->
	<select id="selectCalendarNow" resultType="BandCalendarVO">
		SELECT 	BAND_CALENDAR_NO "bandCalendarNo",
		        BAND_BOARD_DETAIL_NO "bandBoardDetailNo",
		        BAND_CALENDAR_START "bandCalendarStart",
		        BAND_CALENDAR_END "bandCalendarEnd",
		        BAND_CALENDAR_TITLE "bandCalendarTitle",
		        BAND_CALENDAR_MARK "bandCalendarMark",
		        BAND_CALENDAR_LOCATION "bandCalendarLocation", 
		        BAND_CALENDAR_OPTION "bandCalendarOption",
		        BAND_CALENDAR_OPTION_DAY "bandCalendarOptionDay",
		        BAND_CALENDAR_LOCATION_LATLONG "bandCalendarLocationLatlong",
		        BAND_NICKNAME "bandNickname",
		        Y.USER_ID "userId",
		        Y.BAND_NO "bandNo"
					FROM BAND_CALENDAR Z,
		            (SELECT B.BAND_NO, B.BAND_NICKNAME, B.USER_ID FROM BAND A, BAND_MEMBER_DETAIL B
		                WHERE A.BAND_NO = B.BAND_NO
		                AND   A.BAND_NO = #{bandNo}) Y
		            WHERE Z.USER_ID = Y.USER_ID
		            <!-- and( BAND_CALENDAR_START between TRUNC(TO_DATE(#{month}, 'YYYY-MM-DD'), 'MM') and LAST_DAY(TO_DATE(#{month},'YYYY-MM-DD')) -->
		            <!-- OR BAND_CALENDAR_END  between TRUNC(TO_DATE(#{month}, 'YYYY-MM-DD'), 'MM') and LAST_DAY(TO_DATE(#{month},'YYYY-MM-DD'))) -->
		            ORDER BY BAND_CALENDAR_START
	</select>
	<!-- 글이 없던 캘린더 게시글 작성 후 게시글 업데이트 -->
	<update id="updateBandCalendarBoardNo">
		UPDATE BAND_CALENDAR SET BAND_BOARD_DETAIL_NO =#{bandBoardDetailNo}
			WHERE BAND_CALENDAR_NO = #{bandCalendarNo}
	</update>
	<!-- 캘린더 삭제 -->
	<delete id="deleteCalendar">
		DELETE BAND_CALENDAR WHERE BAND_CALENDAR_NO = #{BANDCALENDARNO}
	</delete>
	
	<!-- 게시글 삭제 게시판번호 혹은 게시글번호를 이용 deleteBandBoard(bandBoardOptionNo); -->
	<delete id="deleteBandBoard">
		DELETE BAND_BOARD_DETAIL WHERE BAND_BOARD_DETAIL_NO = #{bandBoardOptionNo} or BAND_BOARD_OPTION_NO = #{bandBoardOptionNo}
	</delete>
	<!-- 게시글 다중 삭제???? -->
	<delete id="BandBoardDeleteList">
	DELETE BAND_BOARD_DETAIL WHERE BAND_BOARD_DETAIL_NO IN
		<foreach collection="bandBoardDetailNos" item="b" separator="," open="(" close=")">
        	#{b}
        </foreach>
	</delete>
	
	<!-- 조회수 증가 -->
	<update id="updateViews">
		UPDATE BAND_BOARD_DETAIL
		  SET BAND_BOARD_CNT = BAND_BOARD_CNT+1
		  WHERE BAND_BOARD_DETAIL_NO = #{bandBoardDetailNo}
	</update>
</mapper>