<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="co.prjt.own.band.mapper.BandBoardDetailMapper">
	
	<sql id="condition">
			<if test="bandBoardContent != null and bandBoardContent !=''">
				A.BAND_BOARD_CONTENT LIKE '%' || #{bandBoardContent} || '%'
			</if>
			<if test="bandBoardTitle != null and bandBoardTitle !=''">
				AND A.BAND_BOARD_TITLE LIKE '%' || #{bandBoardTitle} || '%'
			</if>
			<if test="bandBoardWriter != null and bandBoardWriter !=''">
				AND A.BAND_BOARD_WRITER LIKE '%' || #{bandBoardWriter} || '%'
			</if>
			<if test="bandBoardTag != null and bandBoardTag !=''">
				AND A.BAND_BOARD_TAG LIKE '%' || #{bandBoardTag} || '%'
			</if>
			<if test="bandBoardDate != null and bandBoardDate !='' and bandBoardUpdate != null and bandBoardUpdate !='' ">
				AND A.BAND_BOARD_DATE BETWEEN #{bandBoardDate} AND #{bandBoardUpdate}
			</if>
	</sql>
	
	<select id="countBandBoard" resultType="int">
		SELECT COUNT(*)
		    FROM BAND_BOARD_DETAIL A, BAND B, BAND_BOARD_OPTION C
		    WHERE B.BAND_NO=C.BAND_NO
		      AND C.BAND_BOARD_OPTION_NO=A.BAND_BOARD_OPTION_NO
		      AND C.BAND_NO = #{bandNo}
	</select>
	
	<select id="getFiveBoard" resultType="BandBoardDetailSearchVO">
		SELECT 
            A.BAND_BOARD_DETAIL_NO "bandBoardDetailNo",
                A.BAND_BOARD_OPTION_NO "bandBoardOptionNo",
                A.BAND_BOARD_CONTENT "bandBoardContent",
                A.BAND_BOARD_CNT "bandBoardCnt",
                A.BAND_BOARD_TITLE "bandBoardTitle",
                A.BAND_BOARD_WRITER "bandBoardWriter", 
                A.BAND_REMARKS "bandRemarks",
                A.BAND_BOARD_DATE "bandBoardDate",
                A.BAND_BOARD_UPDATE "bandBoardUpdate",
                A.BAND_BOARD_TAG "bandBoardTag",
                B.REPLY      "reply"
      FROM BAND_BOARD_DETAIL A, (SELECT  BAND_BOARD_DETAIL_NO,
        COUNT(REPLY_NO) "REPLY"
        FROM (
    select * from
    (SELECT  A.BAND_BOARD_DETAIL_NO,
            A.BAND_BOARD_OPTION_NO,
            A.BAND_BOARD_CNT,
            A.BAND_BOARD_WRITER, 
            A.BAND_REMARKS,
            A.BAND_BOARD_DATE,
            A.BAND_BOARD_UPDATE,
            A.BAND_BOARD_TAG
        FROM BAND_BOARD_DETAIL A,
             BAND_BOARD_OPTION B,
             BAND C
        WHERE   A.BAND_BOARD_OPTION_NO = B.BAND_BOARD_OPTION_NO
        AND     B.BAND_NO = C.BAND_NO
        AND     C.BAND_NO = #{bandNo}
		<if test="bandBoardDetailNo != null and bandBoardDetailNo !=''">
		
        AND     TO_NUMBER(SUBSTR(A.BAND_BOARD_DETAIL_NO, 5,5))<![CDATA[ < ]]>TO_NUMBER(SUBSTR(#{bandBoardDetailNo}, 5,5))
        </if>
        ORDER BY to_number(SUBSTR(A.BAND_BOARD_DETAIL_NO, 5,5)) DESC
        )
        where rownum between 1 and 5   )A, REPLY B
                        WHERE A.BAND_BOARD_DETAIL_NO = B.CATEGORY_NO(+)
                        GROUP BY  BAND_BOARD_DETAIL_NO) B
                        WHERE A.BAND_BOARD_DETAIL_NO=B.BAND_BOARD_DETAIL_NO
                        ORDER BY to_number(SUBSTR(A.BAND_BOARD_DETAIL_NO, 5,5)) DESC     
	</select>
	<select id="getOwnLike" resultType="OwnLikeVO">
		SELECT 	A.CATEGORY_NO,
		        A.USER_ID,
		        A.CATEGORY,
		        A.LIKE_NO,
		        B.LIKECOUNT
		FROM(
		SELECT  CATEGORY_NO,
		        USER_ID,
		        CATEGORY,
		        LIKE_NO
		        FROM OWN_LIKE
		        WHERE CATEGORY_NO IN 
	                                <foreach collection="categoryNos" item="c" separator="," open="(" close=")">
	                                	#{c}
	                                </foreach>
			                                AND USER_ID=#{userId}) A,
		(SELECT  CATEGORY_NO, COUNT(CATEGORY_NO) "LIKECOUNT"
		        FROM OWN_LIKE
		        WHERE CATEGORY_NO IN 
	                                <foreach collection="categoryNos" item="c" separator="," open="(" close=")">
	                                	#{c}
	                                </foreach>
		        GROUP BY CATEGORY_NO) B
		        WHERE A.CATEGORY_NO=B.CATEGORY_NO
	</select>
	
	<select id="getBandBoard" resultType="BandBoardDetailSearchVO">
			SELECT      BAND_BOARD_DETAIL_NO "bandBoardDetailNo",
            BAND_BOARD_OPTION_NO "bandBoardOptionNo",
            BAND_BOARD_CONTENT "bandBoardContent",
            BAND_BOARD_CNT "bandBoardCnt",
            BAND_BOARD_TITLE "bandBoardTitle",
            BAND_BOARD_WRITER "bandBoardWriter", 
            BAND_REMARKS "bandRemarks",
            BAND_BOARD_DATE "bandBoardDate",
            BAND_BOARD_UPDATE "bandBoardUpdate",
            BAND_BOARD_TAG "bandBoardTag",
            REPLY      "reply"
		 FROM ( SELECT ROWNUM RN, A.* FROM (
				SELECT * FROM 
(
SELECT 
            A.BAND_BOARD_DETAIL_NO,
            A.BAND_BOARD_OPTION_NO,
            A.BAND_BOARD_CONTENT,
            A.BAND_BOARD_CNT,
            A.BAND_BOARD_TITLE,
            A.BAND_BOARD_WRITER,
            A.BAND_REMARKS,
            A.BAND_BOARD_DATE,
            A.BAND_BOARD_UPDATE,
            A.BAND_BOARD_TAG,
            B.REPLY
      FROM BAND_BOARD_DETAIL A, (SELECT  BAND_BOARD_DETAIL_NO,
        COUNT(REPLY_NO) "REPLY"
        FROM (
    select * from
    (SELECT  A.BAND_BOARD_DETAIL_NO,
            A.BAND_BOARD_OPTION_NO,
            A.BAND_BOARD_CNT,
            A.BAND_BOARD_WRITER, 
            A.BAND_REMARKS,
            A.BAND_BOARD_DATE,
            A.BAND_BOARD_UPDATE,
            A.BAND_BOARD_TAG
        FROM BAND_BOARD_DETAIL A,
             BAND_BOARD_OPTION B,
             BAND C
        WHERE   A.BAND_BOARD_OPTION_NO = B.BAND_BOARD_OPTION_NO
        AND     B.BAND_NO = C.BAND_NO
        AND     C.BAND_NO = #{bandNo}
        ))A, REPLY B
        WHERE A.BAND_BOARD_DETAIL_NO = B.CATEGORY_NO(+)
        GROUP BY  BAND_BOARD_DETAIL_NO) B
        WHERE A.BAND_BOARD_DETAIL_NO=B.BAND_BOARD_DETAIL_NO
        <include refid="condition" />
        ORDER BY to_number(SUBSTR(A.BAND_BOARD_DETAIL_NO, 5,5)) DESC
 )       
 <![CDATA[
 		) A WHERE ROWNUM <= #{last} ) WHERE RN >= #{first}
 ]]>
	</select>
	<select id="getBandBoardCount" resultType="int">
		SELECT  count(*)
        FROM BAND_BOARD_DETAIL A,
             BAND_BOARD_OPTION B,
             BAND C
        WHERE   A.BAND_BOARD_OPTION_NO = B.BAND_BOARD_OPTION_NO
        AND     B.BAND_NO = C.BAND_NO
        AND     C.BAND_NO = #{bandNo}
        <include refid="condition" />
	</select>
	
	<select id="getBandBoardDetail" resultType="BandBoardDetailSearchVO">
		SELECT BAND_BOARD_DETAIL_NO "bandBoardDetailNo",
	            BAND_BOARD_OPTION_NO "bandBoardOptionNo",
	            BAND_BOARD_CONTENT "bandBoardContent",
	            BAND_BOARD_CNT "bandBoardCnt",
	            BAND_BOARD_TITLE "bandBoardTitle",
	            BAND_BOARD_WRITER "bandBoardWriter", 
	            BAND_REMARKS "bandRemarks",
	            BAND_BOARD_DATE "bandBoardDate",
	            BAND_BOARD_UPDATE "bandBoardUpdate",
	            BAND_BOARD_TAG "bandBoardTag",
	            BAND_NICKNAME "bandNickname",
	            BAND_NO "bandNo"
	    FROM  (SELECT 
	    		BAND_BOARD_DETAIL_NO,
	            A.BAND_BOARD_OPTION_NO,
	            BAND_BOARD_CONTENT,
	            BAND_BOARD_CNT,
	            BAND_BOARD_TITLE,
	            BAND_BOARD_WRITER,
	            BAND_REMARKS,
	            BAND_BOARD_DATE,
	            BAND_BOARD_UPDATE,
	            BAND_BOARD_TAG,
	            BAND_NICKNAME,
	            C.BAND_NO 
	            FROM BAND_BOARD_DETAIL A, BAND_MEMBER_DETAIL B, band_board_option C
	            WHERE A.BAND_BOARD_WRITER = B.USER_ID
                     AND C.BAND_NO = B.BAND_NO
                     AND C.BAND_BOARD_OPTION_NO = A.BAND_BOARD_OPTION_NO
	                 AND A.BAND_BOARD_DETAIL_NO = #{bandBoardDetailNo}
	        )WHERE ROWNUM=1
	</select>
	<select id="getOwnDetailLike" resultType="OwnLikeVO">
		SELECT * FROM OWN_LIKE WHERE CATEGORY_NO = #{bandBoardDetailNo}
	</select>
	
	<insert id="insertBandBoard">
		<selectKey keyProperty="bandBoardDetailNo" resultType="string" order="BEFORE">
			SELECT MAX(TO_NUMBER(SUBSTR(BAND_BOARD_DETAIL_NO,5)))+1 FROM BAND_BOARD_DETAIL
		</selectKey>
		INSERT INTO BAND_BOARD_DETAIL(
                    BAND_BOARD_CONTENT,
                    BAND_BOARD_CNT,
                    BAND_BOARD_DETAIL_NO,
                    BAND_REMARKS,
                    BAND_BOARD_DATE,
                    BAND_BOARD_UPDATE,
                    BAND_BOARD_TAG,
                    BAND_BOARD_OPTION_NO,
                    BAND_BOARD_TITLE,
                    BAND_BOARD_WRITER)
            values(
                    #{bandBoardContent},
                    1,
                    'BDD_'||#{bandBoardDetailNo},
                    #{bandRemarks},
                    CURRENT_DATE,
                    NULL,
                    #{bandBoardTag},
                    #{bandBoardOptionNo},	
                    #{bandBoardTitle},
                    #{bandBoardWriter}
                    )
	</insert>
	<update id="updateBandBoard">
		UPDATE BAND_BOARD_DETAIL SET
                    BAND_BOARD_CONTENT = #{bandBoardContent},
                    BAND_REMARKS = #{bandRemarks},
                    BAND_BOARD_UPDATE = current_date,
                    BAND_BOARD_TAG = #{bandBoardTag},
                    BAND_BOARD_OPTION_NO = #{bandBoardOptionNo},
                    BAND_BOARD_TITLE = #{bandBoardTitle}
           WHERE BAND_BOARD_DETAIL_NO = #{bandBoardDetailNo}
	</update>
	<insert id="insertCalendar">
		<selectKey keyProperty="bandCalendarNo" resultType="string" order="BEFORE">
			SELECT CALENDAR_SEQ.NEXTVAL-1 FROM DUAL
		</selectKey>
		INSERT INTO BAND_CALENDAR(
								BAND_CALENDAR_NO,
								BAND_BOARD_DETAIL_NO,
								BAND_CALENDAR_START,
								BAND_CALENDAR_END,
								BAND_CALENDAR_TITLE,
								BAND_CALENDAR_MARK,
								BAND_CALENDAR_LOCATION, 
								BAND_CALENDAR_OPTION,
								BAND_CALENDAR_OPTION_DAY,
								BAND_CALENDAR_LOCATION_LATLONG,
								BAND_NO
							) VALUES (
								#{bandCalendarNo},
								#{bandBoardDetailNo},
								#{bandCalendarStart},
								#{bandCalendarEnd},
								#{bandCalendarTitle},
								#{bandCalendarMark},
								#{bandCalendarLocation},
								#{bandCalendarOption},
								#{bandCalendarOptionDay},
								#{bandCalendarLocationLatlong},
								#{bandNo}
							)
			
	</insert>
	<select id="selectCalendar" resultType="co.prjt.own.band.service.BandCalendarVO">
		SELECT	BAND_CALENDAR_NO,
				BAND_BOARD_DETAIL_NO,
				BAND_CALENDAR_START,
				BAND_CALENDAR_END,
				BAND_CALENDAR_TITLE,
				BAND_CALENDAR_MARK,
				BAND_CALENDAR_LOCATION, 
				BAND_CALENDAR_OPTION,
				BAND_CALENDAR_OPTION_DAY,
				BAND_CALENDAR_LOCATION_LATLONG,
				BAND_NO
		FROM BAND_CALENDAR
		WHERE BAND_BOARD_DETAIL_NO = #{bandBoardDetailNo}
	</select>
	<select id="selectCalendars" resultType="co.prjt.own.band.service.BandCalendarVO">
		SELECT	BAND_CALENDAR_NO,
				BAND_BOARD_DETAIL_NO,
				BAND_CALENDAR_START,
				BAND_CALENDAR_END,
				BAND_CALENDAR_TITLE,
				BAND_CALENDAR_MARK,
				BAND_CALENDAR_LOCATION, 
				BAND_CALENDAR_OPTION,
				BAND_CALENDAR_OPTION_DAY,
				BAND_CALENDAR_LOCATION_LATLONG,
				BAND_NO
		FROM BAND_CALENDAR
		WHERE BAND_BOARD_DETAIL_NO  IN 
                    <foreach collection="bandBoardDetailNo" item="b" separator="," open="(" close=")">
                    	#{b}
                    </foreach>
	</select>
	
	<select id="selectCalendarDetail" resultType="BandCalendarDetailVO">
		SELECT 	BAND_CALENDAR_NO "bandCalendarNo",
        		BAND_MEMBER_NO "bandUserId",
        		BAND_ATTEND "bandAttend",
        		BAND_NICKNAME "bandMemberNo"
			FROM BAND_CALENDAR_DETAIL A, (SELECT B.BAND_NICKNAME, B.USER_ID FROM BAND A, BAND_MEMBER_DETAIL B
            WHERE A.BAND_NO = B.BAND_NO
            AND   B.BAND_NO = (
                SELECT Z.BAND_NO FROM            
                BAND Z, BAND_CALENDAR Y, BAND_BOARD_DETAIL X, BAND_BOARD_OPTION W
                WHERE Z.BAND_NO             =   W.BAND_NO
                AND   W.BAND_BOARD_OPTION_NO=   X.BAND_BOARD_OPTION_NO
                AND   X.BAND_BOARD_DETAIL_NO=   Y.BAND_BOARD_DETAIL_NO
                AND   Y.BAND_CALENDAR_NO    =   #{BANDCALENDARNO}
            )) B
            WHERE   B.USER_ID = A.BAND_MEMBER_NO
            AND     BAND_CALENDAR_NO    =   #{bandCalendarNo}
	</select>
	<delete id="deleteCalendarDetail">
		DELETE FROM BAND_CALENDAR_DETAIL
				where BAND_CALENDAR_NO = #{bandCalendarNo},
				 and  BAND_MEMBER_NO = #{bandMemberNo},
	</delete>
	<select id="inupProCalendarDetail" statementType="CALLABLE" parameterType="map" resultType="integer">
		{ call insert_update_cal(
				#{bandMemberNo, mode=IN, jdbcType=VARCHAR},
			    #{bandCalendarNo, mode=IN, jdbcType=VARCHAR},
                #{bandAttend, mode=IN, jdbcType=VARCHAR},
	            #{pNum, mode=OUT, jdbcType=INTEGER}
                    )
                }
	</select>
	
	<!-- 7일/14일/30일 밴드캘린더 검색 밴드메인용 -->
	<select id="selectCalendarNum" resultType="BandCalendarVO">
		SELECT	BAND_CALENDAR_NO,
		        BAND_BOARD_DETAIL_NO,
		        BAND_CALENDAR_START,
		        BAND_CALENDAR_END,
		        BAND_CALENDAR_TITLE,
		        BAND_CALENDAR_MARK,
		        BAND_CALENDAR_LOCATION, 
		        BAND_CALENDAR_OPTION,
		        BAND_CALENDAR_OPTION_DAY,
		        BAND_CALENDAR_LOCATION_LATLONG,
		        BAND_NO
				FROM BAND_CALENDAR
				WHERE(( BAND_CALENDAR_START BETWEEN CURRENT_DATE AND CURRENT_DATE + #{day})
		          OR (BAND_CALENDAR_END  BETWEEN CURRENT_DATE AND CURRENT_DATE + #{day}))
          		AND BAND_NO = #{bandNo}
	</select>
</mapper>